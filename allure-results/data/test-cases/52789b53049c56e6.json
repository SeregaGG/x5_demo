{
  "uid" : "52789b53049c56e6",
  "name" : "test_send_email[kholstinin@lanit.ru]",
  "fullName" : "tests.ui.test_login.TestRegistrationForm#test_send_email",
  "historyId" : "c410a02493212ab9b1466f7e7d9f169b",
  "time" : {
    "start" : 1660683413986,
    "stop" : 1660683434525,
    "duration" : 20539
  },
  "description" : "\n        Описание теста.\n        Открыть страницу https://gmail.com/\n        ",
  "descriptionHtml" : "<pre><code>    Описание теста.\n    Открыть страницу https://gmail.com/\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n            failed while waiting 15 seconds\n            to assert Visible\n            for first_by('css selector', 'div#password input')\n\n            reason: NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div#password input\"}\n  (Session info: chrome=80.0.3987.132)\n\n            screenshot: file:///usr/src/x5/reports/selene/screen_1660683412181.png",
  "statusTrace" : "entity = <find_elements_by_name object at 0x7f2cd5155c18>\ncondition = <selene.conditions.Visible object at 0x7f2cd550cc18>, timeout = 15\npolling = 0.5\n\n    def wait_for(entity, condition, timeout=4, polling=0.1):\n        # type: (object, IEntityCondition, int) -> object\n        end_time = time.time() + timeout\n        while True:\n            try:\n>               return condition.fn(entity)\n\n/usr/local/lib/python3.6/site-packages/selene/wait.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selene.conditions.Visible object at 0x7f2cd550cc18>\nelement = <find_elements_by_name object at 0x7f2cd5155c18>\n\n    def fn(self, element):\n        # type: (SeleneElement) -> IWebElement\n>       return self.match(element.get_actual_webelement())\n\n/usr/local/lib/python3.6/site-packages/selene/conditions.py:164: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <find_elements_by_name object at 0x7f2cd5155c18>\n\n    def get_actual_webelement(self):\n        # type: () -> IWebElement\n>       return self.__delegate__\n\n/usr/local/lib/python3.6/site-packages/selene/elements.py:244: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <find_elements_by_name object at 0x7f2cd5155c18>\n\n    @property\n    def __delegate__(self):\n        # type: () -> IWebElement\n>       return self._locator.find()\n\n/usr/local/lib/python3.6/site-packages/selene/elements.py:239: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selene.elements.WebDriverWebElementLocator object at 0x7f2cd5155be0>\n\n    def find(self):\n>       return self._search_context.find_element(*self._by)\n\n/usr/local/lib/python3.6/site-packages/selene/elements.py:71: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.webdriver.WebDriver (session=\"2db817c49f78a9e86b28ffafff8587ff\")>\nby = 'css selector', value = 'div#password input'\n\n    def find_element(self, by=By.ID, value=None):\n>       return self._webdriver.find_element(by, value)\n\n/usr/local/lib/python3.6/site-packages/selene/driver.py:111: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.webdriver.WebDriver (session=\"2db817c49f78a9e86b28ffafff8587ff\")>\nby = 'css selector', value = 'div#password input'\n\n    def find_element(self, by=By.ID, value=None):\n        \"\"\"\n        Find an element given a By strategy and locator. Prefer the find_element_by_* methods when\n        possible.\n    \n        :Usage:\n            element = driver.find_element(By.ID, 'foo')\n    \n        :rtype: WebElement\n        \"\"\"\n        if self.w3c:\n            if by == By.ID:\n                by = By.CSS_SELECTOR\n                value = '[id=\"%s\"]' % value\n            elif by == By.TAG_NAME:\n                by = By.CSS_SELECTOR\n            elif by == By.CLASS_NAME:\n                by = By.CSS_SELECTOR\n                value = \".%s\" % value\n            elif by == By.NAME:\n                by = By.CSS_SELECTOR\n                value = '[name=\"%s\"]' % value\n        return self.execute(Command.FIND_ELEMENT, {\n            'using': by,\n>           'value': value})['value']\n\n/usr/local/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py:978: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.webdriver.WebDriver (session=\"2db817c49f78a9e86b28ffafff8587ff\")>\ndriver_command = 'findElement'\nparams = {'using': 'css selector', 'value': 'div#password input'}\n\n    def execute(self, driver_command, params=None):\n        \"\"\"\n        Sends a command to be executed by a command.CommandExecutor.\n    \n        :Args:\n         - driver_command: The name of the command to execute as a string.\n         - params: A dictionary of named parameters to send with the command.\n    \n        :Returns:\n          The command's JSON response loaded into a dictionary object.\n        \"\"\"\n        if self.session_id is not None:\n            if not params:\n                params = {'sessionId': self.session_id}\n            elif 'sessionId' not in params:\n                params['sessionId'] = self.session_id\n    \n        params = self._wrap_value(params)\n        response = self.command_executor.execute(driver_command, params)\n        if response:\n>           self.error_handler.check_response(response)\n\n/usr/local/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py:321: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f2cd51b1f98>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...iv#password input\\\\\"}\\\\n  (Session info: chrome=80.0.3987.132)\",\"stacktrace\":\"#0 0x55fe73cdcd29 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div#password input\"}\nE         (Session info: chrome=80.0.3987.132)\n\n/usr/local/lib/python3.6/site-packages/selenium/webdriver/remote/errorhandler.py:242: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nwebdriver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"2db817c49f78a9e86b28ffafff8587ff\")>\nentity = <find_elements_by_name object at 0x7f2cd5155c18>\ncondition = <selene.conditions.Visible object at 0x7f2cd550cc18>, timeout = 15\npolling = 0.5\n\n    def _wait_with_screenshot(webdriver, entity, condition, timeout=None, polling=None):\n        if timeout is None:\n            timeout = config.timeout\n        if polling is None:\n            polling = config.poll_during_waits\n        try:\n>           return wait_for(entity, condition, timeout, polling)\n\n/usr/local/lib/python3.6/site-packages/selene/elements.py:227: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nentity = <find_elements_by_name object at 0x7f2cd5155c18>\ncondition = <selene.conditions.Visible object at 0x7f2cd550cc18>, timeout = 15\npolling = 0.5\n\n    def wait_for(entity, condition, timeout=4, polling=0.1):\n        # type: (object, IEntityCondition, int) -> object\n        end_time = time.time() + timeout\n        while True:\n            try:\n                return condition.fn(entity)\n            except Exception as reason:\n                reason_message = str(reason)\n                # reason_message = getattr(reason, 'msg',  # todo: is the previous line enough?\n                #                          getattr(reason, 'message',\n                #                                  getattr(reason, 'args', '')))\n    \n                if six.PY2:\n                    if isinstance(reason_message, unicode):\n                        reason_message = reason_message.encode('unicode-escape')\n                reason_string = '{name}: {message}'.format(name=reason.__class__.__name__, message=reason_message)\n                screen = getattr(reason, 'screen', None)\n                stacktrace = getattr(reason, 'stacktrace', None)\n    \n                if time.time() > end_time:\n                    raise TimeoutException('''\n                failed while waiting {timeout} seconds\n                to assert {condition}\n                for {entity}\n    \n                reason: {reason}'''.format(\n                        timeout=timeout,\n                        condition=condition.description(),\n                        entity=entity,\n>                       reason=reason_string), screen, stacktrace)\nE                   selenium.common.exceptions.TimeoutException: Message: \nE                               failed while waiting 15 seconds\nE                               to assert Visible\nE                               for first_by('css selector', 'div#password input')\nE                   \nE                               reason: NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div#password input\"}\nE                     (Session info: chrome=80.0.3987.132)\n\n/usr/local/lib/python3.6/site-packages/selene/wait.py:59: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_login.TestRegistrationForm object at 0x7f2cd51b1da0>\nemail = 'kholstinin@lanit.ru'\n\n    @allure.story('Отправить письмо')\n    @allure.testcase('https://gmail.com/', name='Ссылка на тест-кейс')\n    @pytest.mark.parametrize('email', email_data.emails)\n    @pytest.mark.usefixtures(\"close_driver_after_test\")\n    def test_send_email(self, email):\n        \"\"\"\n        Описание теста.\n        Открыть страницу https://gmail.com/\n        \"\"\"\n        login_page = GmailLoginPage().open()\n>       main_page = login_page.login(login=self.auth.login, password=self.auth.password)\n\ntests/ui/test_login.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nframework/ui_pages/login_page.py:25: in login\n    self.password_field.set(password)\n/usr/local/lib/python3.6/site-packages/selene/elements.py:407: in set\n    condition=be.visible)\n/usr/local/lib/python3.6/site-packages/selene/elements.py:290: in _execute_on_webelement\n    return command(_wait_with_screenshot(self._webdriver, self, condition))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nwebdriver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"2db817c49f78a9e86b28ffafff8587ff\")>\nentity = <find_elements_by_name object at 0x7f2cd5155c18>\ncondition = <selene.conditions.Visible object at 0x7f2cd550cc18>, timeout = 15\npolling = 0.5\n\n    def _wait_with_screenshot(webdriver, entity, condition, timeout=None, polling=None):\n        if timeout is None:\n            timeout = config.timeout\n        if polling is None:\n            polling = config.poll_during_waits\n        try:\n            return wait_for(entity, condition, timeout, polling)\n        except TimeoutException as e:\n            screenshot = helpers.take_screenshot(webdriver, )\n            msg = '''{original_msg}\n                screenshot: file://{screenshot}'''.format(original_msg=e.msg, screenshot=screenshot)\n>           raise TimeoutException(msg, e.screen, e.stacktrace)\nE           selenium.common.exceptions.TimeoutException: Message: \nE                       failed while waiting 15 seconds\nE                       to assert Visible\nE                       for first_by('css selector', 'div#password input')\nE           \nE                       reason: NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div#password input\"}\nE             (Session info: chrome=80.0.3987.132)\nE           \nE                       screenshot: file:///usr/src/x5/reports/selene/screen_1660683412181.png\n\n/usr/local/lib/python3.6/site-packages/selene/elements.py:232: TimeoutException",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "close_driver_after_test",
    "time" : {
      "start" : 1660683413985,
      "stop" : 1660683413985,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_driver_if_not_open",
    "time" : {
      "start" : 1660683413976,
      "stop" : 1660683413984,
      "duration" : 8
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_driver",
    "time" : {
      "start" : 1660683412310,
      "stop" : 1660683413976,
      "duration" : 1666
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_screen",
    "time" : {
      "start" : 1660683413985,
      "stop" : 1660683413985,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n        Описание теста.\n        Открыть страницу https://gmail.com/\n        ",
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n            failed while waiting 15 seconds\n            to assert Visible\n            for first_by('css selector', 'div#password input')\n\n            reason: NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div#password input\"}\n  (Session info: chrome=80.0.3987.132)\n\n            screenshot: file:///usr/src/x5/reports/selene/screen_1660683412181.png",
    "statusTrace" : "entity = <find_elements_by_name object at 0x7f2cd5155c18>\ncondition = <selene.conditions.Visible object at 0x7f2cd550cc18>, timeout = 15\npolling = 0.5\n\n    def wait_for(entity, condition, timeout=4, polling=0.1):\n        # type: (object, IEntityCondition, int) -> object\n        end_time = time.time() + timeout\n        while True:\n            try:\n>               return condition.fn(entity)\n\n/usr/local/lib/python3.6/site-packages/selene/wait.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selene.conditions.Visible object at 0x7f2cd550cc18>\nelement = <find_elements_by_name object at 0x7f2cd5155c18>\n\n    def fn(self, element):\n        # type: (SeleneElement) -> IWebElement\n>       return self.match(element.get_actual_webelement())\n\n/usr/local/lib/python3.6/site-packages/selene/conditions.py:164: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <find_elements_by_name object at 0x7f2cd5155c18>\n\n    def get_actual_webelement(self):\n        # type: () -> IWebElement\n>       return self.__delegate__\n\n/usr/local/lib/python3.6/site-packages/selene/elements.py:244: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <find_elements_by_name object at 0x7f2cd5155c18>\n\n    @property\n    def __delegate__(self):\n        # type: () -> IWebElement\n>       return self._locator.find()\n\n/usr/local/lib/python3.6/site-packages/selene/elements.py:239: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selene.elements.WebDriverWebElementLocator object at 0x7f2cd5155be0>\n\n    def find(self):\n>       return self._search_context.find_element(*self._by)\n\n/usr/local/lib/python3.6/site-packages/selene/elements.py:71: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.webdriver.WebDriver (session=\"2db817c49f78a9e86b28ffafff8587ff\")>\nby = 'css selector', value = 'div#password input'\n\n    def find_element(self, by=By.ID, value=None):\n>       return self._webdriver.find_element(by, value)\n\n/usr/local/lib/python3.6/site-packages/selene/driver.py:111: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.webdriver.WebDriver (session=\"2db817c49f78a9e86b28ffafff8587ff\")>\nby = 'css selector', value = 'div#password input'\n\n    def find_element(self, by=By.ID, value=None):\n        \"\"\"\n        Find an element given a By strategy and locator. Prefer the find_element_by_* methods when\n        possible.\n    \n        :Usage:\n            element = driver.find_element(By.ID, 'foo')\n    \n        :rtype: WebElement\n        \"\"\"\n        if self.w3c:\n            if by == By.ID:\n                by = By.CSS_SELECTOR\n                value = '[id=\"%s\"]' % value\n            elif by == By.TAG_NAME:\n                by = By.CSS_SELECTOR\n            elif by == By.CLASS_NAME:\n                by = By.CSS_SELECTOR\n                value = \".%s\" % value\n            elif by == By.NAME:\n                by = By.CSS_SELECTOR\n                value = '[name=\"%s\"]' % value\n        return self.execute(Command.FIND_ELEMENT, {\n            'using': by,\n>           'value': value})['value']\n\n/usr/local/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py:978: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.webdriver.WebDriver (session=\"2db817c49f78a9e86b28ffafff8587ff\")>\ndriver_command = 'findElement'\nparams = {'using': 'css selector', 'value': 'div#password input'}\n\n    def execute(self, driver_command, params=None):\n        \"\"\"\n        Sends a command to be executed by a command.CommandExecutor.\n    \n        :Args:\n         - driver_command: The name of the command to execute as a string.\n         - params: A dictionary of named parameters to send with the command.\n    \n        :Returns:\n          The command's JSON response loaded into a dictionary object.\n        \"\"\"\n        if self.session_id is not None:\n            if not params:\n                params = {'sessionId': self.session_id}\n            elif 'sessionId' not in params:\n                params['sessionId'] = self.session_id\n    \n        params = self._wrap_value(params)\n        response = self.command_executor.execute(driver_command, params)\n        if response:\n>           self.error_handler.check_response(response)\n\n/usr/local/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py:321: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f2cd51b1f98>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...iv#password input\\\\\"}\\\\n  (Session info: chrome=80.0.3987.132)\",\"stacktrace\":\"#0 0x55fe73cdcd29 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div#password input\"}\nE         (Session info: chrome=80.0.3987.132)\n\n/usr/local/lib/python3.6/site-packages/selenium/webdriver/remote/errorhandler.py:242: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nwebdriver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"2db817c49f78a9e86b28ffafff8587ff\")>\nentity = <find_elements_by_name object at 0x7f2cd5155c18>\ncondition = <selene.conditions.Visible object at 0x7f2cd550cc18>, timeout = 15\npolling = 0.5\n\n    def _wait_with_screenshot(webdriver, entity, condition, timeout=None, polling=None):\n        if timeout is None:\n            timeout = config.timeout\n        if polling is None:\n            polling = config.poll_during_waits\n        try:\n>           return wait_for(entity, condition, timeout, polling)\n\n/usr/local/lib/python3.6/site-packages/selene/elements.py:227: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nentity = <find_elements_by_name object at 0x7f2cd5155c18>\ncondition = <selene.conditions.Visible object at 0x7f2cd550cc18>, timeout = 15\npolling = 0.5\n\n    def wait_for(entity, condition, timeout=4, polling=0.1):\n        # type: (object, IEntityCondition, int) -> object\n        end_time = time.time() + timeout\n        while True:\n            try:\n                return condition.fn(entity)\n            except Exception as reason:\n                reason_message = str(reason)\n                # reason_message = getattr(reason, 'msg',  # todo: is the previous line enough?\n                #                          getattr(reason, 'message',\n                #                                  getattr(reason, 'args', '')))\n    \n                if six.PY2:\n                    if isinstance(reason_message, unicode):\n                        reason_message = reason_message.encode('unicode-escape')\n                reason_string = '{name}: {message}'.format(name=reason.__class__.__name__, message=reason_message)\n                screen = getattr(reason, 'screen', None)\n                stacktrace = getattr(reason, 'stacktrace', None)\n    \n                if time.time() > end_time:\n                    raise TimeoutException('''\n                failed while waiting {timeout} seconds\n                to assert {condition}\n                for {entity}\n    \n                reason: {reason}'''.format(\n                        timeout=timeout,\n                        condition=condition.description(),\n                        entity=entity,\n>                       reason=reason_string), screen, stacktrace)\nE                   selenium.common.exceptions.TimeoutException: Message: \nE                               failed while waiting 15 seconds\nE                               to assert Visible\nE                               for first_by('css selector', 'div#password input')\nE                   \nE                               reason: NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div#password input\"}\nE                     (Session info: chrome=80.0.3987.132)\n\n/usr/local/lib/python3.6/site-packages/selene/wait.py:59: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_login.TestRegistrationForm object at 0x7f2cd51b1da0>\nemail = 'kholstinin@lanit.ru'\n\n    @allure.story('Отправить письмо')\n    @allure.testcase('https://gmail.com/', name='Ссылка на тест-кейс')\n    @pytest.mark.parametrize('email', email_data.emails)\n    @pytest.mark.usefixtures(\"close_driver_after_test\")\n    def test_send_email(self, email):\n        \"\"\"\n        Описание теста.\n        Открыть страницу https://gmail.com/\n        \"\"\"\n        login_page = GmailLoginPage().open()\n>       main_page = login_page.login(login=self.auth.login, password=self.auth.password)\n\ntests/ui/test_login.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nframework/ui_pages/login_page.py:25: in login\n    self.password_field.set(password)\n/usr/local/lib/python3.6/site-packages/selene/elements.py:407: in set\n    condition=be.visible)\n/usr/local/lib/python3.6/site-packages/selene/elements.py:290: in _execute_on_webelement\n    return command(_wait_with_screenshot(self._webdriver, self, condition))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nwebdriver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"2db817c49f78a9e86b28ffafff8587ff\")>\nentity = <find_elements_by_name object at 0x7f2cd5155c18>\ncondition = <selene.conditions.Visible object at 0x7f2cd550cc18>, timeout = 15\npolling = 0.5\n\n    def _wait_with_screenshot(webdriver, entity, condition, timeout=None, polling=None):\n        if timeout is None:\n            timeout = config.timeout\n        if polling is None:\n            polling = config.poll_during_waits\n        try:\n            return wait_for(entity, condition, timeout, polling)\n        except TimeoutException as e:\n            screenshot = helpers.take_screenshot(webdriver, )\n            msg = '''{original_msg}\n                screenshot: file://{screenshot}'''.format(original_msg=e.msg, screenshot=screenshot)\n>           raise TimeoutException(msg, e.screen, e.stacktrace)\nE           selenium.common.exceptions.TimeoutException: Message: \nE                       failed while waiting 15 seconds\nE                       to assert Visible\nE                       for first_by('css selector', 'div#password input')\nE           \nE                       reason: NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div#password input\"}\nE             (Session info: chrome=80.0.3987.132)\nE           \nE                       screenshot: file:///usr/src/x5/reports/selene/screen_1660683412181.png\n\n/usr/local/lib/python3.6/site-packages/selene/elements.py:232: TimeoutException",
    "steps" : [ {
      "name" : "Авторизоваться",
      "time" : {
        "start" : 1660683418550,
        "stop" : 1660683434522,
        "duration" : 15972
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n            failed while waiting 15 seconds\n            to assert Visible\n            for first_by('css selector', 'div#password input')\n\n            reason: NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div#password input\"}\n  (Session info: chrome=80.0.3987.132)\n\n            screenshot: file:///usr/src/x5/reports/selene/screen_1660683412181.png\n\n",
      "statusTrace" : "  File \"/usr/local/lib/python3.6/site-packages/allure_commons/_allure.py\", line 157, in impl\n    return func(*a, **kw)\n  File \"/usr/src/x5/framework/ui_pages/login_page.py\", line 25, in login\n    self.password_field.set(password)\n  File \"/usr/local/lib/python3.6/site-packages/selene/elements.py\", line 407, in set\n    condition=be.visible)\n  File \"/usr/local/lib/python3.6/site-packages/selene/elements.py\", line 290, in _execute_on_webelement\n    return command(_wait_with_screenshot(self._webdriver, self, condition))\n  File \"/usr/local/lib/python3.6/site-packages/selene/elements.py\", line 232, in _wait_with_screenshot\n    raise TimeoutException(msg, e.screen, e.stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "login",
        "value" : "'smpl.tstr@gmail.com'"
      }, {
        "name" : "password",
        "value" : "'qw77QX4g87B'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "b2b14180d7cef2cc",
      "name" : "screen_on_fail",
      "source" : "b2b14180d7cef2cc.png",
      "type" : "image/png",
      "size" : 39606
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "close_driver_after_test::close_driver",
    "time" : {
      "start" : 1660683435183,
      "stop" : 1660683435244,
      "duration" : 61
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_driver::close_driver",
    "time" : {
      "start" : 1660683457240,
      "stop" : 1660683457243,
      "duration" : 3
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_screen::0",
    "time" : {
      "start" : 1660683434994,
      "stop" : 1660683435179,
      "duration" : 185
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "ac46c7869c07f8f4",
      "name" : "screen_after_step",
      "source" : "ac46c7869c07f8f4.png",
      "type" : "image/png",
      "size" : 39606
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Gmail.com Расылка писем"
  }, {
    "name" : "story",
    "value" : "Отправить письмо"
  }, {
    "name" : "tag",
    "value" : "positive"
  }, {
    "name" : "parentSuite",
    "value" : "tests.ui"
  }, {
    "name" : "suite",
    "value" : "test_login"
  }, {
    "name" : "subSuite",
    "value" : "TestRegistrationForm"
  }, {
    "name" : "host",
    "value" : "7f74694a85b6"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.ui.test_login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "email",
    "value" : "'kholstinin@lanit.ru'"
  } ],
  "links" : [ {
    "name" : "Ссылка на тест-кейс",
    "url" : "https://gmail.com/",
    "type" : "test_case"
  } ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "positive" ]
  },
  "source" : "52789b53049c56e6.json",
  "parameterValues" : [ "'kholstinin@lanit.ru'" ]
}